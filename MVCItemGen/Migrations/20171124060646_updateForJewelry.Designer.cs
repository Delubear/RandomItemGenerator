// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using MVCItemGen.Model;
using RPGItemGenerator.ItemGeneration;
using System;

namespace MVCItemGen.Migrations
{
    [DbContext(typeof(ItemDbContext))]
    [Migration("20171124060646_updateForJewelry")]
    partial class updateForJewelry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Item", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BaseName");

                    b.Property<int>("CurrentDurability");

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("ItemType");

                    b.Property<int>("MaxDurability");

                    b.Property<string>("Name");

                    b.Property<string>("Prefix");

                    b.Property<string>("PrefixDescriptor");

                    b.Property<int>("Rarity");

                    b.Property<string>("Suffix");

                    b.Property<int>("Value");

                    b.HasKey("ID");

                    b.ToTable("items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Armor", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.Item");

                    b.Property<int>("ArmorType");

                    b.Property<int>("ArmorValue");

                    b.ToTable("Armor");

                    b.HasDiscriminator().HasValue("Armor");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Jewelry", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.Item");

                    b.Property<string>("Effect");

                    b.Property<int>("JewelryType");

                    b.ToTable("Jewelry");

                    b.HasDiscriminator().HasValue("Jewelry");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Potions", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.Item");

                    b.Property<string>("Effect")
                        .HasColumnName("Potions_Effect");

                    b.ToTable("Potions");

                    b.HasDiscriminator().HasValue("Potions");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.SecondaryProperties", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.Item");

                    b.Property<string>("PropDescription");

                    b.ToTable("SecondaryProperties");

                    b.HasDiscriminator().HasValue("SecondaryProperties");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Weapons", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.Item");

                    b.Property<double>("Accuracy");

                    b.Property<int>("DamageType");

                    b.Property<int>("DamageValue");

                    b.Property<int>("WeaponCat");

                    b.Property<int>("WeaponType");

                    b.ToTable("Weapons");

                    b.HasDiscriminator().HasValue("Weapons");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Acidic", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Acidic");

                    b.HasDiscriminator().HasValue("Acidic");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Ancient", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Ancient");

                    b.HasDiscriminator().HasValue("Ancient");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Bludgeoning", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Bludgeoning");

                    b.HasDiscriminator().HasValue("Bludgeoning");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Chainmail", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Chainmail");

                    b.HasDiscriminator().HasValue("Chainmail");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Deadeye", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Deadeye");

                    b.HasDiscriminator().HasValue("Deadeye");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Deadly", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Deadly");

                    b.HasDiscriminator().HasValue("Deadly");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Dull", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Dull");

                    b.HasDiscriminator().HasValue("Dull");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Durable", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Durable");

                    b.HasDiscriminator().HasValue("Durable");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Fiery", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Fiery");

                    b.HasDiscriminator().HasValue("Fiery");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Focusing", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Focusing");

                    b.HasDiscriminator().HasValue("Focusing");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Fragile", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Fragile");

                    b.HasDiscriminator().HasValue("Fragile");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Freezing", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Freezing");

                    b.HasDiscriminator().HasValue("Freezing");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Horned", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Horned");

                    b.HasDiscriminator().HasValue("Horned");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Iron", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Iron");

                    b.HasDiscriminator().HasValue("Iron");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Leather", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Leather");

                    b.HasDiscriminator().HasValue("Leather");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Lightning", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Lightning");

                    b.HasDiscriminator().HasValue("Lightning");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.New", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("New");

                    b.HasDiscriminator().HasValue("New");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Obsidian", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Obsidian");

                    b.HasDiscriminator().HasValue("Obsidian");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Old", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Old");

                    b.HasDiscriminator().HasValue("Old");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Piercing", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Piercing");

                    b.HasDiscriminator().HasValue("Piercing");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Platemail", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Platemail");

                    b.HasDiscriminator().HasValue("Platemail");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Sharp", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Sharp");

                    b.HasDiscriminator().HasValue("Sharp");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Slashing", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Slashing");

                    b.HasDiscriminator().HasValue("Slashing");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Steel", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Steel");

                    b.HasDiscriminator().HasValue("Steel");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Strength", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Strength");

                    b.HasDiscriminator().HasValue("Strength");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Unbreakable", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Unbreakable");

                    b.HasDiscriminator().HasValue("Unbreakable");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Vitality", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Vitality");

                    b.HasDiscriminator().HasValue("Vitality");
                });

            modelBuilder.Entity("RPGItemGenerator.ItemGeneration.Wooden", b =>
                {
                    b.HasBaseType("RPGItemGenerator.ItemGeneration.SecondaryProperties");


                    b.ToTable("Wooden");

                    b.HasDiscriminator().HasValue("Wooden");
                });
#pragma warning restore 612, 618
        }
    }
}
