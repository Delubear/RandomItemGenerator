@model MVCItemGen.ViewModels.ItemListViewModel

<h2>List</h2>
@foreach (var item in Model.ItemList)
{
    <h3>
        Name: @item.Name                                       <br />
        Item Type: @item.ItemType                                  <br />
        Rarity:    @item.Rarity                                    <br />
        Value:   @item.Value                                       <br />
        Durability:  @item.CurrentDurability / @item.MaxDurability <br />

        Properties:
        @foreach (var prop in item.SecondaryProps.Values)
        {
            <text> @prop.PropDescription </text>
        }

        <br />

        @if (item.GetType().ToString() == "RPGItemGenerator.ItemGeneration.Weapons")
        {

            <text>Damage: @item.GetType().GetProperty("DamageValue").GetValue(item)</text>
            <br />
            <text>Damage Type: @item.GetType().GetProperty("DamageType").GetValue(item)</text>
        }

        else if (item.GetType().ToString() == "RPGItemGenerator.ItemGeneration.Armor")
        {

            <text>Armor: @item.GetType().GetProperty("ArmorValue").GetValue(item)</text>
            <br />
            <text>Armor Type: @item.GetType().GetProperty("ArmorType").GetValue(item)</text>
        }


        else if (item.GetType().ToString() == "RPGItemGenerator.ItemGeneration.Potions")
        {
            <text>Effects: @item.GetType().GetProperty("Effect").GetValue(item)</text>
            <br />
        }
    </h3>
}
